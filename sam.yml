AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 10
    MemorySize: 256
    Runtime: nodejs8.10
    Environment:
      Variables:
        SNS_TOPIC_ARN: !Ref SnsTopic
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
    
Resources:
  CreateTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: './dist'
      Handler: index.createTodo
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /todo
            Method: POST
  
  ReadTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: './dist'
      Handler: index.readTodo
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /todo/{id}
            Method: GET
        Api2:
          Type: Api
          Properties:
            Path: /todo
            Method: GET

  DeleteTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: './dist'
      Handler: index.deleteTodo
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /todo/{id}
            Method: DELETE

  UpdateTodo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: './dist'
      Handler: index.updateTodo
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /todo/{id}
            Method: PUT

  StreamHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: './dist'
      Handler: index.streamHandler
      Role: !GetAtt DynamoEventStreamRole.Arn
  
  SnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: tobiasmoretty@gmail.com
          Protocol: email
  
  myTodoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: myTodoTable
      AttributeDefinitions:
      - AttributeName: todo_id
        AttributeType: S
      KeySchema:
      - AttributeName: todo_id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  
  DynamoEventStreamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              - 'lambda.amazonaws.com'
          Action: 
            - 'sts:AssumeRole'
      RoleName: 'DynamoEventStreamRole'
  
  SnsAndEventStreamPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: 'SnsAndEventStreamPolicy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'dynamodb:DescribeStream'
              - 'dynamodb:GetRecords'
              - 'dynamodb:GetShardIterator'
              - 'dynamodb:ListStreams'
              - 'dynamodb:Query'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'sns:Publish'
            Resource: '*' 
      Roles:
        - Ref: DynamoEventStreamRole
  
  DataTableStream:
    Type: AWS::Lambda::EventSourceMapping
    DependsOn: SnsAndEventStreamPolicy
    Properties:
      BatchSize: 1
      Enabled: True
      EventSourceArn:
        !GetAtt myTodoTable.StreamArn
      FunctionName:
        !GetAtt StreamHandler.Arn
      StartingPosition: LATEST
      
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Api:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todo/"
